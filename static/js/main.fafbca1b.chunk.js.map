{"version":3,"sources":["api/API.ts","features/Application/application-reducer.ts","features/Auth/auth-reducer.ts","utils/localStorageUtils.ts","features/Auth/Login.tsx","features/Auth/Registration.tsx","features/Cards/cards-reducer.ts","features/Cards/Card/CreateCard.tsx","features/Cards/Card/Card.tsx","features/Cards/Row.tsx","features/Cards/RowsList.tsx","utils/LoginRedirect.tsx","assets/images/404.gif","features/404Page/404Page.tsx","app/Pages.tsx","app/Routes.tsx","utils/ErrorSnackbar.tsx","app/Main.tsx","app/store.ts","app/App.tsx","reportWebVitals.ts","index.tsx"],"names":["RowStatuses","instance","axios","create","baseURL","interceptors","request","use","config","localStorage","getItem","token","JSON","parse","headers","Authorization","authAPI","data","post","cardsAPI","row","get","params","patch","id","text","seq_num","delete","setAppStatus","createAction","setAppError","appReducer","createSlice","name","initialState","loading","error","reducers","extraReducers","builder","addCase","state","action","payload","reducer","login","createAsyncThunk","a","dispatch","rejectWithValue","res","Object","values","response","message","registration","setIsRegistered","isRegistered","tokenRefresh","setIsLogged","isLogged","logout","slice","fulfilled","authReducer","actions","saveState","serializedState","stringify","setItem","loginValidationSchema","Yup","shape","username","required","password","authUseStyles","makeStyles","theme","wrapper","height","backgroundColor","display","alignItems","color","paper","maxWidth","maxHeight","textAlign","title","marginBottom","spacing","paddingTop","form","width","lastFormInput","formButton","Login","useDispatch","useSelector","auth","useState","redirect","setRedirect","first","setFirst","classes","inputStyle","WebkitBoxShadow","useForm","resolver","yupResolver","register","handleSubmit","errors","formState","cards","useEffect","to","PATH","APPLICATION","Box","className","Container","Typography","variant","onSubmit","FormControl","TextField","margin","size","label","helperText","inputProps","style","type","autoComplete","Button","component","REGISTRATION","loginRegex","RegExp","registerValidationSchema","max","matches","email","Registration","mode","LOGIN","getCards","param","createCard","card","deleteCard","updateCard","previouslyRow","cardsReducer","forEach","r","filter","c","push","pending","meta","arg","splice","previouslySeqNum","rejected","useStyles","openInputButton","justifyContent","closeInputButton","textarea","padding","marginRight","flexDirection","CreateCard","addCard","setAddCard","reset","e","addingCard","target","addingCardComponent","multiline","rows","placeholder","InputProps","fontSize","onKeyPress","ctrlKey","code","FormHelperText","marginLeft","onClick","cardWrapper","minHeight","wordBreak","firstLine","deleteIcon","cursor","Card","rowWrapper","marginInlineEnd","props","Row","cardsNumber","length","droppableId","provided","droppableProps","ref","innerRef","map","index","draggableId","toString","draggableProps","dragHandleProps","position","flexWrap","alignContent","logoutButton","bottom","right","titlesColor","RowsList","statuses","keys","mappedRows","s","onDragEnd","result","destination","source","find","Number","LoginRedirect","children","isLoading","app","flexGrow","ErrorPage","src","travoltaGif","alt","ERROR","mappedRoutes","_id","path","exact","page","p","render","Routes","Alert","elevation","ErrorSnackbar","appError","handleClose","event","reason","Snackbar","open","autoHideDuration","onClose","severity","Main","createTheme","palette","overrides","MuiFormLabel","root","MuiOutlinedInput","notchedOutline","borderWidth","borderColor","MuiFilledInput","borderTopLeftRadius","borderTopRightRadius","underline","borderBottom","ThemeProvider","rootReducer","combineReducers","store","configureStore","preloadedState","err","loadState","middleware","getDefaultMiddleware","prepend","thunk","subscribe","throttle","getState","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fafbca1b.chunk.js","sourcesContent":["import axios from 'axios'\r\n\r\nexport enum RowStatuses {\r\n    OnHold = '0',\r\n    InProgress = '1',\r\n    NeedReview = '2',\r\n    Approved = '3'\r\n}\r\n\r\ninterface LoginResponseData {\r\n    username: string\r\n    password: string\r\n    token: string\r\n}\r\n\r\nexport interface LoginRegisterRequestData {\r\n    username: string\r\n    password: string\r\n    email?: string\r\n}\r\n\r\ninterface RegisterResponseData extends LoginResponseData {\r\n    email?: string\r\n}\r\n\r\nexport type CardType = {\r\n    id: number\r\n    row: RowStatuses\r\n    seq_num: number\r\n    text: string\r\n}\r\n\r\nexport interface CreateCardRequestData {\r\n    row: RowStatuses,\r\n    text: string\r\n}\r\n\r\nexport const instance = axios.create({\r\n    baseURL: 'https://trello.backend.tests.nekidaem.ru/api/v1/'\r\n})\r\n\r\ninstance.interceptors.request.use(function (config) {\r\n    if (localStorage.getItem('token')) {\r\n        const token = JSON.parse(localStorage.getItem('token') as string)\r\n        config.headers.Authorization = token && `JWT ${token}`\r\n    }\r\n    return config\r\n})\r\n\r\n\r\nexport const authAPI = {\r\n    login(data: LoginRegisterRequestData) {\r\n        return instance.post<LoginResponseData>('users/login/', data)\r\n    },\r\n    register(data: LoginRegisterRequestData) {\r\n        return instance.post<RegisterResponseData>('users/create/', data)\r\n    },\r\n    refreshToken(token: string) {\r\n        return instance.post<{ token: string }>('users/refresh_token/', {token})\r\n    }\r\n}\r\n\r\nexport const cardsAPI = {\r\n    getCards(row?: string) {\r\n        return instance.get<CardType[]>('cards/', {\r\n            params: {\r\n                row: row\r\n            }\r\n        })\r\n    },\r\n    createCard(data: CreateCardRequestData) {\r\n        return instance.post<CardType>('cards/', data)\r\n    },\r\n    updateCard(data: CardType) {\r\n        return instance.patch<CardType>(`cards/${data.id}/`, {\r\n            row: data.row,\r\n            text: data.text,\r\n            seq_num: data.seq_num\r\n        } as CardType)\r\n    },\r\n    deleteCard(id: number) {\r\n        return instance.delete(`cards/${id}/`)\r\n    }\r\n}\r\n","import {createAction, createSlice} from '@reduxjs/toolkit'\r\n\r\nexport type AppErrorType = null | string\r\nexport type appReducerInitialState = typeof initialState\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    error: null as AppErrorType,\r\n}\r\n\r\nexport const setAppStatus = createAction<{ loading: boolean }>('app/setAppStatus')\r\nexport const setAppError = createAction<{ error: AppErrorType }>('app/setAppError')\r\n\r\nexport const slice = createSlice({\r\n    name: 'app',\r\n    initialState: initialState,\r\n    reducers: {},\r\n    extraReducers: builder => {\r\n        builder.addCase(setAppStatus, (state, action) => {\r\n            state.loading = action.payload.loading\r\n        })\r\n            .addCase(setAppError, (state, action) => {\r\n                state.error = action.payload.error\r\n            })\r\n    }\r\n})\r\n\r\nexport const appReducer = slice.reducer\r\n\r\n","import {createAction, createAsyncThunk, createSlice, PayloadAction} from '@reduxjs/toolkit'\r\nimport {authAPI, LoginRegisterRequestData} from '../../api/API'\r\nimport {setAppError, setAppStatus} from '../Application/application-reducer'\r\n\r\n\r\nexport const login = createAsyncThunk('auth/login', async (data: LoginRegisterRequestData, {\r\n    dispatch,\r\n    rejectWithValue\r\n}) => {\r\n    dispatch(setAppStatus({loading: true}))\r\n    try {\r\n        let res = await authAPI.login(data)\r\n        return {token: res.data.token}\r\n    } catch (err) {\r\n        const [message] = Object.values(err.response.data)[0] as Array<string>\r\n        dispatch(setAppError({error: message}))\r\n        return rejectWithValue(err)\r\n    } finally {\r\n        dispatch(setAppStatus({loading: false}))\r\n    }\r\n})\r\n\r\nexport const registration = createAsyncThunk('auth/registration', async (data: LoginRegisterRequestData, {\r\n    dispatch,\r\n    rejectWithValue\r\n}) => {\r\n    dispatch(setAppStatus({loading: true}))\r\n    try {\r\n        let res = await authAPI.register(data)\r\n        dispatch(setIsRegistered({isRegistered: true}))\r\n        return {token: res.data.token}\r\n    } catch (err) {\r\n        dispatch(setIsRegistered({isRegistered: false}))\r\n        const [message] = Object.values(err.response.data)[0] as Array<string>\r\n        dispatch(setAppError({error: message}))\r\n        return rejectWithValue(err)\r\n    } finally {\r\n        dispatch(setAppStatus({loading: false}))\r\n    }\r\n})\r\n\r\nexport const tokenRefresh = createAsyncThunk('application/tokenRefresh', async (token: string, {\r\n        dispatch,\r\n        rejectWithValue\r\n    }) => {\r\n        dispatch(setAppStatus({loading: true}))\r\n        try {\r\n            const res = await authAPI.refreshToken(token)\r\n            dispatch(setIsLogged({isLogged: true}))\r\n            return {token: res.data.token}\r\n        } catch (err) {\r\n            dispatch(setIsLogged({isLogged: false}))\r\n            return rejectWithValue(err)\r\n        } finally {\r\n            dispatch(setAppStatus({loading: false}))\r\n        }\r\n    }\r\n)\r\n\r\nexport const logout = createAction('auth/logout')\r\n\r\nexport const slice = createSlice({\r\n    name: 'auth',\r\n    initialState: {\r\n        isLogged: false,\r\n        isRegistered: false,\r\n        token: JSON.parse(localStorage.getItem('token') as string)\r\n    },\r\n    reducers: {\r\n        setIsLogged: (state, action: PayloadAction<{ isLogged: boolean }>) => {\r\n            state.isLogged = action.payload.isLogged\r\n        },\r\n        setIsRegistered: (state, action: PayloadAction<{ isRegistered: boolean }>) => {\r\n            state.isRegistered = action.payload.isRegistered\r\n        }\r\n    },\r\n    extraReducers: builder => {\r\n        builder.addCase(login.fulfilled, (state, action) => {\r\n            state.isLogged = true\r\n            state.token = action.payload.token\r\n        })\r\n            .addCase(registration.fulfilled, (state, action) => {\r\n                state.token = action.payload.token\r\n            })\r\n            .addCase(tokenRefresh.fulfilled, (state, action) => {\r\n                state.token = action.payload.token\r\n            })\r\n    }\r\n})\r\n\r\nexport const authReducer = slice.reducer\r\nexport const {setIsLogged, setIsRegistered} = slice.actions\r\n\r\n\r\n\r\n\r\n\r\n","import { AppRootStateType } from \"../app/store\"\r\n\r\nexport const loadState = () => {\r\n    try {\r\n        const serializedState = localStorage.getItem('app-state')\r\n        if (serializedState === null) {\r\n            return undefined\r\n        }\r\n        return JSON.parse(serializedState)\r\n    } catch (err) {\r\n        return undefined\r\n    }\r\n}\r\n\r\nexport const saveState = (state: AppRootStateType) => {\r\n    try {\r\n        const serializedState = JSON.stringify(state)\r\n        localStorage.setItem('app-state', serializedState)\r\n    } catch {\r\n    }\r\n}\r\n","import {Box, Button, Container, FormControl, makeStyles, TextField, Typography} from '@material-ui/core'\r\nimport {SubmitHandler, useForm} from 'react-hook-form'\r\nimport * as Yup from 'yup'\r\nimport {yupResolver} from '@hookform/resolvers/yup'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {login, logout, setIsLogged} from './auth-reducer'\r\nimport {NavLink, Redirect} from 'react-router-dom'\r\nimport {PATH} from '../../app/Pages'\r\nimport {useEffect, useState} from 'react'\r\nimport {AppRootStateType} from '../../app/store'\r\nimport {saveState} from '../../utils/localStorageUtils'\r\n\r\ntype LoginInputs = {\r\n    username: string\r\n    password: string\r\n};\r\n\r\nconst loginValidationSchema = Yup.object().shape({\r\n    username: Yup.string()\r\n        .required('Login is required'),\r\n    password: Yup.string()\r\n        .required('Password is required')\r\n})\r\n\r\nexport const authUseStyles = makeStyles((theme) => ({\r\n    wrapper: {\r\n        height: '100vh',\r\n        backgroundColor: 'var(--main-bg-color)',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        color: '#FFFFFF'\r\n    },\r\n    paper: {\r\n        maxWidth: '438px',\r\n        maxHeight: '600px',\r\n        textAlign: 'center'\r\n    },\r\n    title: {\r\n        marginBottom: theme.spacing(5),\r\n        paddingTop: theme.spacing(5)\r\n    },\r\n    form: {\r\n        width: '80%'\r\n    },\r\n    lastFormInput: {\r\n        marginBottom: theme.spacing(4),\r\n        color: '#FFFFFF'\r\n    },\r\n    formButton: {\r\n        marginBottom: theme.spacing(6)\r\n    }\r\n}))\r\n\r\n\r\nexport const Login = () => {\r\n    const dispatch = useDispatch()\r\n    const isLogged = useSelector<AppRootStateType, boolean>(state => state.auth.isLogged)\r\n    const [redirect, setRedirect] = useState(false)\r\n    const [first, setFirst] = useState(true)\r\n\r\n    //styles\r\n    const classes = authUseStyles()\r\n    const inputStyle = {WebkitBoxShadow: '0 0 0 1000px #33363D inset'}\r\n\r\n    //form\r\n    const {register, handleSubmit, formState: {errors}} = useForm<LoginInputs>({\r\n        resolver: yupResolver(loginValidationSchema)\r\n    })\r\n    const onSubmit: SubmitHandler<LoginInputs> = data => dispatch(login(data))\r\n\r\n    saveState({\r\n        cards: {},\r\n    } as AppRootStateType)\r\n\r\n    useEffect(() => {\r\n        if (first) {\r\n            dispatch(logout())\r\n            dispatch(setIsLogged({isLogged: false}))\r\n            setFirst(false)\r\n        } else {\r\n            if (isLogged) setRedirect(true)\r\n        }\r\n    }, [isLogged, first, dispatch])\r\n\r\n    if (redirect) return <Redirect to={PATH.APPLICATION}/>\r\n\r\n    return (\r\n        <Box className={classes.wrapper}>\r\n            <Container className={classes.paper} maxWidth={'xs'}>\r\n                <Typography className={classes.title} variant={'h5'}>Sign In</Typography>\r\n                <form onSubmit={handleSubmit(onSubmit)}>\r\n                    <FormControl className={classes.form}>\r\n                        <TextField variant={'outlined'} margin={'normal'} size={'medium'}\r\n                                   error={!!errors.username} id={'login'} label={'Login'}\r\n                                   helperText={errors.username && errors.username.message}\r\n                                   inputProps={{style: inputStyle}}\r\n                                   {...register('username')}/>\r\n                        <TextField className={classes.lastFormInput} variant={'outlined'} margin={'normal'}\r\n                                   error={!!errors.password} id={'password'}\r\n                                   label={'Password'}\r\n                                   helperText={errors.password && errors.password.message}\r\n                                   type={'password'}\r\n                                   autoComplete={'current-password'}\r\n                                   inputProps={{style: inputStyle}} {...register('password')}/>\r\n                        <Button className={classes.formButton} size={'large'} color={'default'}\r\n                                variant={'contained'}\r\n                                type=\"submit\">Login</Button>\r\n                    </FormControl>\r\n                </form>\r\n                <Typography variant={'overline'} component={'p'}>Don’t have an account?</Typography>\r\n                <NavLink to={PATH.REGISTRATION}>Sign Up</NavLink>\r\n            </Container>\r\n        </Box>\r\n    )\r\n}","import {Box, Button, Container, FormControl, TextField, Typography} from '@material-ui/core'\r\nimport {SubmitHandler, useForm} from 'react-hook-form'\r\nimport {yupResolver} from '@hookform/resolvers/yup'\r\nimport * as Yup from 'yup'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {registration, setIsLogged, setIsRegistered} from './auth-reducer'\r\nimport {AppRootStateType} from '../../app/store'\r\nimport {NavLink, Redirect} from 'react-router-dom'\r\nimport {PATH} from '../../app/Pages'\r\nimport {authUseStyles} from './Login'\r\nimport {useEffect, useState} from 'react'\r\n\r\ntype RegistrationInputs = {\r\n    username: string\r\n    password: string\r\n    email: string\r\n};\r\nconst loginRegex = new RegExp('^[\\\\w.@+-]+$')\r\nconst passwordRegex = /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{8,}$/\r\nconst registerValidationSchema = Yup.object().shape({\r\n    username: Yup.string()\r\n        .max(150, '150 characters or fewer')\r\n        .matches(loginRegex, 'Letters, digits and @/./+/-/_ only')\r\n        .required('Username is required'),\r\n    email: Yup.string()\r\n        .required('Email is required')\r\n        .email('Email is invalid'),\r\n    password: Yup.string()\r\n        .required('Password is required')\r\n        .matches(\r\n            passwordRegex,\r\n            'Must Contain 8 Characters, One Uppercase, One Lowercase, One Number and one special case Character'\r\n        )\r\n})\r\n\r\nexport const Registration = () => {\r\n    //styles\r\n    const classes = authUseStyles()\r\n    const inputStyle = {WebkitBoxShadow: '0 0 0 1000px #33363D inset'}\r\n\r\n    const dispatch = useDispatch()\r\n    const [first, setFirst] = useState(true)\r\n    const [redirect, setRedirect] = useState(false)\r\n\r\n    //form\r\n    const isRegistered = useSelector<AppRootStateType, boolean>(state => state.auth.isRegistered)\r\n    const {register, handleSubmit, formState: {errors}} = useForm<RegistrationInputs>({\r\n        resolver: yupResolver(registerValidationSchema),\r\n        mode: 'onChange'\r\n    })\r\n    const onSubmit: SubmitHandler<RegistrationInputs> = data => dispatch(registration(data))\r\n\r\n    useEffect(() => {\r\n        if (first) {\r\n            dispatch(setIsRegistered({isRegistered: false}))\r\n            dispatch(setIsLogged({isLogged: false}))\r\n            setFirst(false)\r\n        } else {\r\n            isRegistered && setRedirect(true)\r\n        }\r\n    }, [dispatch, isRegistered, first])\r\n\r\n    if (redirect) return <Redirect to={PATH.LOGIN}/>\r\n    return (\r\n        <Box className={classes.wrapper}>\r\n            <Container className={classes.paper} maxWidth={'xs'}>\r\n                <Typography className={classes.title} variant={'h5'}>Sign Up</Typography>\r\n                <form onSubmit={handleSubmit(onSubmit)}>\r\n                    <FormControl className={classes.form}>\r\n                        <TextField variant={'outlined'} margin={'normal'} error={!!errors.email} id={'email'}\r\n                                   label={'Email'}\r\n                                   helperText={errors.email && errors.email.message}\r\n                                   autoComplete={'new-password'}\r\n                                   inputProps={{style: inputStyle}} {...register('email')}/>\r\n                        <TextField variant={'outlined'} margin={'normal'} error={!!errors.username} id={'username'}\r\n                                   label={'Username'}\r\n                                   helperText={errors.username && errors.username.message}\r\n                                   autoComplete={'new-password'}\r\n                                   inputProps={{style: inputStyle}} {...register('username')}/>\r\n                        <TextField className={classes.lastFormInput} variant={'outlined'} margin={'normal'}\r\n                                   error={!!errors.password} id={'password'}\r\n                                   label={'Password'}\r\n                                   autoComplete={'new-password'}\r\n                                   helperText={errors.password && errors.password.message}\r\n                                   type={'password'} inputProps={{style: inputStyle}} {...register('password')}/>\r\n                        <Button className={classes.formButton} size={'large'} color={'default'} variant={'contained'}\r\n                                type=\"submit\">Registration</Button>\r\n                    </FormControl>\r\n                </form>\r\n                <Typography variant={'overline'} component={'p'}>Already have an account?</Typography>\r\n                <NavLink to={PATH.LOGIN}>Sign In</NavLink>\r\n            </Container>\r\n        </Box>\r\n    )\r\n}","import {createAsyncThunk, createSlice} from '@reduxjs/toolkit'\r\nimport {cardsAPI, CardType, CreateCardRequestData, RowStatuses} from '../../api/API'\r\nimport {setAppError, setAppStatus} from '../Application/application-reducer'\r\nimport {logout} from '../Auth/auth-reducer'\r\n\r\nexport type CardsStateType = {\r\n    [value in RowStatuses]: CardType[]\r\n}\r\n\r\n//thunks\r\nexport const getCards = createAsyncThunk('cards/getCards', async (param: { row?: RowStatuses } | undefined, {\r\n    dispatch,\r\n    rejectWithValue\r\n}) => {\r\n    dispatch(setAppStatus({loading: true}))\r\n    try {\r\n        const res = await cardsAPI.getCards(param && param.row)\r\n        return {cards: res.data}\r\n    } catch (err) {\r\n        dispatch(setAppError({error: 'Some error occurred'}))\r\n        return rejectWithValue({})\r\n    } finally {\r\n        dispatch(setAppStatus({loading: false}))\r\n    }\r\n})\r\n\r\nexport const createCard = createAsyncThunk('cards/createCard', async (data: CreateCardRequestData, {\r\n    dispatch,\r\n    rejectWithValue\r\n}) => {\r\n    dispatch(setAppStatus({loading: true}))\r\n    try {\r\n        const res = await cardsAPI.createCard(data)\r\n        return {card: res.data}\r\n    } catch (err) {\r\n        dispatch(setAppError({error: 'Some error occurred'}))\r\n        return rejectWithValue({})\r\n    } finally {\r\n        dispatch(setAppStatus({loading: false}))\r\n    }\r\n})\r\n\r\nexport const deleteCard = createAsyncThunk('cards/deleteCard', async (param: { id: number }, {\r\n    dispatch,\r\n    rejectWithValue\r\n}) => {\r\n    dispatch(setAppStatus({loading: true}))\r\n    try {\r\n        await cardsAPI.deleteCard(param.id)\r\n        dispatch(getCards())\r\n    } catch (err) {\r\n        dispatch(setAppError({error: 'Some error occurred'}))\r\n        return rejectWithValue({})\r\n    } finally {\r\n        dispatch(setAppStatus({loading: false}))\r\n    }\r\n})\r\n\r\nexport const updateCard = createAsyncThunk('cards/updateCard', async (param: { data: CardType, previouslyRow: string, previouslySeqNum: number }, {\r\n    dispatch,\r\n    rejectWithValue\r\n}) => {\r\n    dispatch(setAppStatus({loading: true}))\r\n    try {\r\n        const res = await cardsAPI.updateCard(param.data)\r\n        return {card: res.data, previouslyRow: param.previouslyRow}\r\n    } catch (err) {\r\n        dispatch(setAppError(err))\r\n        return rejectWithValue({card: param.data, previouslyRow: param.previouslyRow})\r\n    } finally {\r\n        dispatch(setAppStatus({loading: false}))\r\n    }\r\n})\r\n\r\n//!!!UpdateCard if connection lost card will be on start position\r\nconst slice = createSlice({\r\n    name: 'cards',\r\n    initialState: {} as CardsStateType,\r\n    reducers: {},\r\n    extraReducers: builder => {\r\n        builder.addCase(getCards.fulfilled, (state, action) => {\r\n            Object.values(RowStatuses).forEach(r => {\r\n                state[r] = action.payload.cards.filter(c => c.row === r)\r\n            })\r\n        }).addCase(logout, state => {\r\n            return {} as CardsStateType\r\n        })\r\n            .addCase(createCard.fulfilled, (state, action) => {\r\n                state[action.payload.card.row].push(action.payload.card)\r\n            })\r\n            .addCase(updateCard.pending, (state, action) => {\r\n                state[action.meta.arg.previouslyRow as RowStatuses].splice(action.meta.arg.previouslySeqNum, 1)\r\n                state[action.meta.arg.data.row].splice(action.meta.arg.data.seq_num, 0, action.meta.arg.data)\r\n            })\r\n            .addCase(updateCard.rejected, (state, action) => {\r\n                state[action.meta.arg.data.row].splice(action.meta.arg.data.seq_num, 1)\r\n                state[action.meta.arg.previouslyRow as RowStatuses].splice(action.meta.arg.previouslySeqNum, 0, action.meta.arg.data)\r\n            })\r\n    }\r\n})\r\n\r\nexport const cardsReducer = slice.reducer\r\n","import AddIcon from '@material-ui/icons/Add'\r\nimport CloseIcon from '@material-ui/icons/Close'\r\nimport React, {useState} from 'react'\r\nimport {Box, Button, FormControl, FormHelperText, makeStyles, TextField} from '@material-ui/core'\r\nimport {useDispatch} from 'react-redux'\r\nimport {createCard} from '../cards-reducer'\r\nimport {RowStatuses} from '../../../api/API'\r\nimport {SubmitHandler, useForm} from 'react-hook-form'\r\n\r\ntype CreateCardProps = {\r\n    row: RowStatuses\r\n}\r\n\r\ntype CreateCardInputs = {\r\n    text: string\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n    wrapper: {\r\n        width: '100%',\r\n        display: 'flex'\r\n    },\r\n    openInputButton: {\r\n        width: '100%',\r\n        justifyContent: 'start',\r\n        color: '#919697',\r\n        '&:hover': {\r\n            backgroundColor: '#26282C'\r\n        }\r\n    },\r\n    closeInputButton: {\r\n        color: '#FFFFFF',\r\n    },\r\n    textarea: {\r\n        padding: '10px',\r\n        marginRight: '-10px'\r\n    },\r\n    form: {\r\n      display: 'flex',\r\n      flexDirection: 'column'\r\n    },\r\n})\r\n\r\nexport const CreateCard: React.FC<CreateCardProps> = ({row}) => {\r\n    const classes = useStyles()\r\n    const dispatch = useDispatch()\r\n    const [addCard, setAddCard] = useState(false)\r\n    const {register, handleSubmit, formState: {errors}, reset} = useForm<CreateCardInputs>({})\r\n\r\n    const onSubmit: SubmitHandler<CreateCardInputs> = (data, e) => {\r\n        addingCard(data.text)\r\n        reset(e?.target.reset())\r\n    }\r\n\r\n    const addingCard = (text: string) => {\r\n        dispatch(createCard({row, text}))\r\n        setAddCard(false)\r\n    }\r\n\r\n    const onKeyPressHandler = (e:React.KeyboardEvent<HTMLDivElement>) => {\r\n        (e.ctrlKey && e.code === 'Enter') && handleSubmit(onSubmit)()\r\n    }\r\n\r\n    const addingCardComponent = (\r\n        <form className={classes.form} onSubmit={handleSubmit(onSubmit)}>\r\n            <FormControl className={classes.textarea}>\r\n                <TextField\r\n                    variant={'filled'}\r\n                    multiline\r\n                    rows={4}\r\n                    placeholder={'Ввести заголовок для этой карточки'}\r\n                    InputProps={{\r\n                        style: {\r\n                            fontSize: '14px',\r\n                            padding: '6px 6px 10px'\r\n                        },\r\n                    }}\r\n                    onKeyPress={onKeyPressHandler}\r\n                    {...register('text', {required: true})}\r\n                />\r\n                {errors.text && <FormHelperText error={!!errors.text}>Cards can't be empty</FormHelperText>}\r\n            </FormControl>\r\n            <Box marginLeft={'10px'}>\r\n                <Button className={classes.closeInputButton} type=\"submit\">Добавить карточку</Button>\r\n                <Button  onClick={() => setAddCard(false)}><CloseIcon/></Button>\r\n            </Box>\r\n        </form>\r\n    )\r\n\r\n    return (\r\n        <div className={classes.wrapper}>\r\n            {addCard ?\r\n                addingCardComponent\r\n                :\r\n                <Button className={classes.openInputButton} onClick={() => setAddCard(true)}><AddIcon\r\n                    fontSize={'small'}/>Добавить карточку</Button>\r\n            }\r\n\r\n        </div>\r\n    )\r\n}","import {Box, makeStyles} from '@material-ui/core'\r\nimport React from 'react'\r\nimport CloseIcon from '@material-ui/icons/Close'\r\nimport {useDispatch} from 'react-redux'\r\nimport {deleteCard} from '../cards-reducer'\r\n\r\ntype CardProps = {\r\n    id: number\r\n    text: string\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    cardWrapper: {\r\n        minHeight: '80px',\r\n        padding: '10px',\r\n        margin: '10px',\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        backgroundColor: '#1E2021',\r\n        color: '#919697',\r\n        wordBreak: 'break-all'\r\n    },\r\n    id: {\r\n        color: '#FFF'\r\n    },\r\n    firstLine: {\r\n        display: 'inline-block',\r\n        marginBottom: theme.spacing(1)\r\n    },\r\n    deleteIcon: {\r\n        '&:hover': {\r\n            color: '#FFF'\r\n        },\r\n        cursor: 'pointer'\r\n    }\r\n}))\r\n\r\n\r\nexport const Card: React.FC<CardProps> = ({id, text}) => {\r\n    const classes = useStyles()\r\n    const dispatch = useDispatch()\r\n    const removeCard = () => dispatch(deleteCard({id}))\r\n\r\n    return (\r\n        <Box className={classes.cardWrapper}>\r\n            <Box>\r\n                <span className={classes.firstLine}><b className={classes.id}>id: </b>{id}</span><br/>\r\n                <span>{text}</span>\r\n            </Box>\r\n            <Box>\r\n                <CloseIcon className={classes.deleteIcon} onClick={removeCard} fontSize={'small'}/>\r\n            </Box>\r\n        </Box>\r\n    )\r\n}","import {CardType, RowStatuses} from '../../api/API'\r\nimport React from 'react'\r\nimport {makeStyles, Typography} from '@material-ui/core'\r\nimport {CreateCard} from './Card/CreateCard'\r\nimport {useSelector} from 'react-redux'\r\nimport {AppRootStateType} from '../../app/store'\r\nimport {RowsTitles} from './RowsList'\r\nimport {Card} from './Card/Card'\r\nimport {Draggable, Droppable} from 'react-beautiful-dnd'\r\n\r\ntype RowProps = {\r\n    title: RowsTitles\r\n    color: string\r\n}\r\n\r\nconst useStyles = makeStyles<unknown, { color: string }>({\r\n    rowWrapper: {\r\n        backgroundColor: '#2F3137',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        margin: '10px',\r\n        marginBottom: 'auto',\r\n        '@media (max-width:1140px)': {\r\n            marginInlineEnd: 'initial',\r\n        }\r\n    },\r\n    title: {\r\n        backgroundColor: props => props.color,\r\n        width: '250px',\r\n        height: '40px',\r\n        padding: '5px',\r\n        color: '#FFFFFF',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start'\r\n    }\r\n})\r\n\r\nexport const Row: React.FC<RowProps> = ({title, color}) => {\r\n    const classes = useStyles({color})\r\n    const row = RowStatuses[title]\r\n    const cards = useSelector<AppRootStateType, CardType[]>(state => state.cards[row])\r\n    let cardsNumber = 0\r\n    if (cards) {\r\n        cardsNumber = cards.length\r\n    }\r\n\r\n    return (\r\n        <div className={classes.rowWrapper}>\r\n            <Droppable droppableId={row}>\r\n                {((provided) => {\r\n                    return (\r\n                        <>\r\n                            <div className={classes.title}>\r\n                                <Typography variant={'h6'}>{`${title} (${cardsNumber})`}</Typography>\r\n                            </div>\r\n                            <div {...provided.droppableProps} ref={provided.innerRef}>\r\n                                {cards && cards.map((c, index) =>\r\n                                    <Draggable key={c.id} draggableId={c.id.toString()} index={index}>\r\n                                        {(provided) => {\r\n                                            return (\r\n                                                <div ref={provided.innerRef}\r\n                                                     {...provided.draggableProps}\r\n                                                     {...provided.dragHandleProps}\r\n                                                     style={{...provided.draggableProps.style}}>\r\n                                                    <Card id={c.id} text={c.text}/>\r\n                                                </div>\r\n                                            )\r\n                                        }}\r\n                                    </Draggable>\r\n                                )}\r\n                                <CreateCard row={row}/>\r\n                            </div>\r\n                        </>\r\n                    )\r\n                })}\r\n            </Droppable>\r\n        </div>\r\n    )\r\n}","import {CardType, RowStatuses} from '../../api/API'\r\nimport {Row} from './Row'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {useEffect, useState} from 'react'\r\nimport {CardsStateType, getCards, updateCard} from './cards-reducer'\r\nimport {Box, Button, makeStyles} from '@material-ui/core'\r\nimport {AppRootStateType} from '../../app/store'\r\nimport {DragDropContext, DropResult} from 'react-beautiful-dnd'\r\nimport {Redirect} from 'react-router-dom'\r\nimport {PATH} from '../../app/Pages'\r\n\r\ntype TitlesColor = {\r\n    [key in RowsTitles]: string\r\n}\r\n\r\nexport type RowsTitles = keyof typeof RowStatuses\r\n\r\nconst useStyles = makeStyles({\r\n    wrapper: {\r\n        position: 'relative',\r\n        minHeight: '100vh',\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-around',\r\n        flexWrap: 'wrap',\r\n        backgroundColor: 'var(--main-bg-color)',\r\n        '@media (max-width:580px)': {\r\n            flexDirection: 'column',\r\n            alignContent: 'center'\r\n        }\r\n    },\r\n    logoutButton: {\r\n        position: 'absolute',\r\n        bottom: '0',\r\n        right: '0'\r\n    }\r\n})\r\n\r\nconst titlesColor: TitlesColor = {\r\n    'NeedReview': '#E1C451',\r\n    'InProgress': '#408FB7',\r\n    'Approved': '#52B169',\r\n    'OnHold': '#EC834F'\r\n}\r\n\r\nexport const RowsList = () => {\r\n    const classes = useStyles()\r\n    const dispatch = useDispatch()\r\n    const [redirect, setRedirect] = useState(false)\r\n    const logoutHandler = () => setRedirect(true)\r\n\r\n    //rows names\r\n    const statuses = Object.keys(RowStatuses)\r\n\r\n    const cards = useSelector<AppRootStateType, CardsStateType>(state => state.cards)\r\n    const mappedRows = statuses.map((s: string, index) => <Row key={index} title={s as RowsTitles}\r\n                                                               color={titlesColor[s as RowsTitles]}/>)\r\n\r\n    //didn't make request if cards already in state\r\n    useEffect(() => {\r\n        if (Object.keys(cards).length === 0) {\r\n            dispatch(getCards())\r\n        }\r\n    }, [dispatch, cards])\r\n\r\n    if (redirect) return <Redirect to={PATH.LOGIN}/>\r\n\r\n    const onDragEnd = (result: DropResult) => {\r\n        if (!result.destination) return\r\n        const card: CardType | undefined = cards[result.source.droppableId as RowStatuses].find(c => c.id === Number(result.draggableId))\r\n        if (card) {\r\n            dispatch(updateCard({\r\n                data: {\r\n                    id: card.id,\r\n                    row: result.destination.droppableId as RowStatuses,\r\n                    seq_num: result.destination.index,\r\n                    text: card.text\r\n                }, previouslyRow: result.source.droppableId,\r\n                previouslySeqNum: result.source.index\r\n            }))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Box className={classes.wrapper}>\r\n            <DragDropContext onDragEnd={(result) => onDragEnd(result)}>\r\n                {mappedRows}\r\n            </DragDropContext>\r\n            <Button className={classes.logoutButton} onClick={logoutHandler}>Log Out</Button>\r\n        </Box>\r\n    )\r\n}","import {useDispatch, useSelector} from 'react-redux'\r\nimport {AppRootStateType} from '../app/store'\r\nimport {Redirect} from 'react-router-dom'\r\nimport {PATH} from '../app/Pages'\r\nimport React, {useEffect, useState} from 'react'\r\nimport {tokenRefresh} from '../features/Auth/auth-reducer'\r\n\r\nexport const LoginRedirect: React.FC = ({children}) => {\r\n    const [first, setFirst] = useState(true)\r\n    const [redirect, setRedirect] = useState(false)\r\n    const dispatch = useDispatch()\r\n    const isLogged = useSelector<AppRootStateType, boolean>(state => state.auth.isLogged)\r\n    const isLoading = useSelector<AppRootStateType, boolean>(state => state.app.loading)\r\n    const token = JSON.parse(localStorage.getItem('token') as string)\r\n\r\n\r\n    useEffect(() => {\r\n        if (first && !isLogged) {\r\n            dispatch(tokenRefresh(token))\r\n            setFirst(false)\r\n        } else {\r\n            if (!isLogged && !isLoading) {\r\n                setRedirect(true)\r\n            }\r\n        }\r\n    }, [dispatch, first, token, isLogged, isLoading])\r\n\r\n    if (redirect) return <Redirect to={PATH.LOGIN}/>\r\n    return (\r\n        <>\r\n            {children}\r\n        </>\r\n    )\r\n}","export default __webpack_public_path__ + \"static/media/404.b0232c0e.gif\";","import React from 'react'\r\nimport travoltaGif from '../../assets/images/404.gif'\r\nimport {makeStyles, Typography} from '@material-ui/core'\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    wrapper: {\r\n        minHeight: '100vh',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        backgroundColor: 'var(--main-bg-color)',\r\n        flexGrow: 1,\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center',\r\n        fontSize: '100px',\r\n        color: '#FFF'\r\n    }\r\n}))\r\n\r\nexport const ErrorPage = () => {\r\n    const classes = useStyles()\r\n    return (\r\n        <div className={classes.wrapper}>\r\n                <Typography variant={'h1'}>Looks like you got lost.</Typography>\r\n                <div>\r\n                    <img src={travoltaGif} alt=\"Travolta looks around\"/>\r\n                </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import {ReactNode} from 'react'\r\nimport {Redirect} from 'react-router-dom'\r\nimport {Login} from '../features/Auth/Login'\r\nimport {Registration} from '../features/Auth/Registration'\r\nimport {RowsList} from '../features/Cards/RowsList'\r\nimport {LoginRedirect} from '../utils/LoginRedirect'\r\nimport {ErrorPage} from '../features/404Page/404Page'\r\n\r\nexport type PageType = {\r\n    _id: number;\r\n    title: string;\r\n    path?: string;\r\n    params?: string;\r\n    exact?: boolean;\r\n    page: ReactNode;\r\n};\r\n\r\nexport const PATH = {\r\n    LOGIN: '/login',\r\n    REGISTRATION: '/registration',\r\n    APPLICATION: '/application',\r\n    ERROR: '/404'\r\n}\r\n\r\nexport const pages: PageType[] = [\r\n    {_id: 0, title: 'main', path: '/', exact: true, page: <Redirect to={PATH.LOGIN}/>},\r\n    {_id: 1, title: 'login', path: PATH.LOGIN, exact: true, page: <Login/>},\r\n    {_id: 2, title: 'registration', path: PATH.REGISTRATION, exact: true, page: <Registration/>},\r\n    {\r\n        _id: 3,\r\n        title: 'application',\r\n        path: PATH.APPLICATION,\r\n        exact: true,\r\n        page: <LoginRedirect><RowsList/></LoginRedirect>\r\n    },\r\n    {_id: 4, title: '404', path: PATH.ERROR, exact: true, page: <ErrorPage/>},\r\n    {_id: 5, title: 'error', path: '*', exact: false, page: <Redirect to={PATH.ERROR}/> }\r\n]","import {Route, Switch } from \"react-router-dom\"\r\nimport {pages} from './Pages'\r\n\r\nconst mappedRoutes = pages.map((p) => (\r\n    <Route\r\n        key={p._id}\r\n        path={p.path && (p.path + (p.params || \"\"))}\r\n        exact={p.exact}\r\n        render={() => p.page}\r\n    />\r\n))\r\n\r\nexport const Routes = () => {\r\n    return(\r\n        <Switch>\r\n            {mappedRoutes}\r\n        </Switch>\r\n    )\r\n}","import React from 'react'\r\nimport Snackbar from '@material-ui/core/Snackbar'\r\nimport MuiAlert, {AlertProps} from '@material-ui/lab/Alert'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {AppRootStateType} from '../app/store'\r\nimport {AppErrorType, setAppError} from '../features/Application/application-reducer'\r\n\r\nfunction Alert(props: AlertProps) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />\r\n}\r\n\r\nexport function ErrorSnackbar() {\r\n    const dispatch = useDispatch()\r\n    const appError = useSelector<AppRootStateType, AppErrorType>(state => state.app.error)\r\n    const setAppErrorHandler = (error:AppErrorType) => dispatch(setAppError({error}))\r\n\r\n    const handleClose = (event?: React.SyntheticEvent, reason?: string) => {\r\n        if (reason === 'clickaway') return\r\n        setAppErrorHandler(null)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Snackbar open={appError !== null} autoHideDuration={3000} onClose={handleClose}>\r\n                <Alert onClose={handleClose} severity=\"error\">\r\n                    {appError}\r\n                </Alert>\r\n            </Snackbar>\r\n        </div>\r\n    )\r\n}\r\n","import {createTheme, ThemeProvider} from '@material-ui/core'\r\nimport {Routes} from './Routes'\r\nimport {ErrorSnackbar} from '../utils/ErrorSnackbar'\r\n\r\nexport const Main = () => {\r\n    const theme = createTheme({\r\n        palette: {\r\n            type: 'dark'\r\n        },\r\n        overrides: {\r\n            MuiFormLabel: {\r\n                root: {\r\n                    color: '#C8C8CA !important'\r\n                }\r\n            },\r\n            MuiOutlinedInput: {\r\n                notchedOutline: {\r\n                    borderWidth: '1px',\r\n                    borderColor: '#EFEFF0 !important'\r\n                }\r\n            },\r\n            MuiFilledInput: {\r\n                root: {\r\n                    borderTopLeftRadius: '0px',\r\n                    borderTopRightRadius: '0px'\r\n                },\r\n                underline: {\r\n                    '&:after,&:before': {\r\n                        borderBottom: 'none'\r\n                    },\r\n                    '&:hover:before': {\r\n                        borderBottom: 'none'\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    })\r\n\r\n    return (\r\n        <ThemeProvider theme={theme}>\r\n            <Routes/>\r\n            <ErrorSnackbar/>\r\n        </ThemeProvider>\r\n    )\r\n}","import {combineReducers} from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport {configureStore} from '@reduxjs/toolkit'\r\nimport {appReducer} from '../features/Application/application-reducer'\r\nimport {authReducer} from '../features/Auth/auth-reducer'\r\nimport {loadState, saveState} from '../utils/localStorageUtils'\r\nimport throttle from 'lodash.throttle'\r\nimport {cardsReducer} from '../features/Cards/cards-reducer'\r\n\r\nexport type AppRootStateType = ReturnType<typeof store.getState>\r\n\r\nexport const rootReducer = combineReducers({\r\n    app: appReducer,\r\n    auth: authReducer,\r\n    cards: cardsReducer\r\n})\r\n\r\nexport const store = configureStore({\r\n    reducer: rootReducer,\r\n    preloadedState: loadState(),\r\n    middleware: getDefaultMiddleware => getDefaultMiddleware().prepend(thunk)\r\n})\r\n\r\nstore.subscribe(throttle(() => {\r\n    saveState({\r\n        cards: store.getState().cards\r\n    } as AppRootStateType)\r\n}, 1000))\r\n\r\nstore.subscribe(() => {\r\n    localStorage.setItem('token', JSON.stringify(store.getState().auth.token))\r\n})\r\n","import React from 'react'\r\nimport {Provider} from 'react-redux'\r\nimport './App.css'\r\nimport {Main} from './Main'\r\nimport {store} from './store'\r\nimport {BrowserRouter} from 'react-router-dom'\r\n\r\nfunction App() {\r\n    return (\r\n        <div className=\"App\">\r\n            <BrowserRouter>\r\n                <Provider store={store}>\r\n                    <Main/>\r\n                </Provider>\r\n            </BrowserRouter>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './app/App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}